---
############################################
# Domaine / ACME
############################################
base_domain: "{{ lookup('env','DOMAIN') | default('wikiplatform.app', true) }}"
acme_email: "{{ lookup('env','ACME_EMAIL') | default('chamer6@hotmail.com', true) }}"

############################################
# Outputs Terraform (scalaires)
############################################
ec2_public_ip:  "{{ ec2_public_ip | default(lookup('env','EC2_PUBLIC_IP'), true) }}"
ec2_public_dns: "{{ ec2_public_dns | default(lookup('env','EC2_PUBLIC_DNS'), true) }}"
vpc_id: "{{ vpc_id | default(lookup('env','VPC_ID'), true) }}"
public_subnet_id: "{{ public_subnet_id | default(lookup('env','PUBLIC_SUBNET_ID'), true) }}"
rds_subnet_group: "{{ rds_subnet_group | default(lookup('env','RDS_SUBNET_GROUP'), true) }}"
ec2_security_group_id: "{{ ec2_security_group_id | default(lookup('env','EC2_SECURITY_GROUP_ID'), true) }}"
rds_security_group_id: "{{ rds_security_group_id | default(lookup('env','RDS_SECURITY_GROUP_ID'), true) | default('') }}"
r2_bucket_name: "{{ r2_bucket_name | default(lookup('env','R2_BUCKET_NAME'), true) | default('') }}"
r2_account_id: "{{ r2_account_id | default(lookup('env','R2_ACCOUNT_ID'), true) | default('') }}"
r2_location: "{{ r2_location | default(lookup('env','R2_LOCATION'), true) | default('') }}"
r2_bucket_endpoint: "{{ r2_bucket_endpoint | default(lookup('env','R2_BUCKET_ENDPOINT'), true) | default('') }}"
ec2_user: "ubuntu"

############################################
# Outputs Terraform (objets JSON) — normalisation
############################################
# bruts : viennent des -e extra-vars ou de l'ENV si pas fournis
db_endpoints_raw: "{{ db_endpoints | default(lookup('env','DB_ENDPOINTS'), true) | default('') }}"
dns_records_raw:  "{{ dns_records  | default(lookup('env','DNS_RECORDS'),  true) | default('') }}"

# normalisés : toujours des dicts (from_yaml accepte JSON/YAML)
db_eps: >-
  {{
    db_endpoints_raw if db_endpoints_raw is mapping
    else ((db_endpoints_raw | default('', true) | trim) | length > 0)
         | ternary((db_endpoints_raw | from_yaml), {})
  }}
dns_recs: >-
  {{
    dns_records_raw if dns_records_raw is mapping
    else ((dns_records_raw | default('', true) | trim) | length > 0)
         | ternary((dns_records_raw | from_yaml), {})
  }}

first_dns_name: "{{ (dns_recs.keys() | list | first | default('')) }}"
############################################
# Wiki.js instances (boucle avec "item") postresql
############################################
wikis:
  - name: ia
    pg_host: >-
      {{
        (db_eps.ia.host if (db_eps.ia is mapping) else db_eps.ia)
        | default('')
      }}
    pg_user: "wikijs"
    pg_pass: "{{ lookup('env','BDD_PASSWORD') | mandatory }}"
    pg_db: "wiki_ia"
    admin_email: "chamer6@hotmail.com"
    admin_password: "{{ lookup('env','ADMIN_PASS_IA') | mandatory }}"

  - name: devops
    pg_host: >-
      {{
        (db_eps.devops.host if (db_eps.devops is mapping) else db_eps.devops)
        | default('')
      }}
    pg_user: "wikijs"
    pg_pass: "{{ lookup('env','BDD_PASSWORD') | mandatory }}"
    pg_db: "wiki_devops"
    admin_email: "chamer6@hotmail.com"
    admin_password: "{{ lookup('env','ADMIN_PASS_DEVOPS') | mandatory }}"

  - name: cyber
    pg_host: >-
      {{
        (db_eps.cyber.host if (db_eps.cyber is mapping) else db_eps.cyber)
        | default('')
      }}
    pg_user: "wikijs"
    pg_pass: "{{ lookup('env','BDD_PASSWORD') | mandatory }}"
    pg_db: "wiki_cyber"
    admin_email: "chamer6@hotmail.com"
    admin_password: "{{ lookup('env','ADMIN_PASS_CYBER') | mandatory }}"

############################################
# Cloudflare R2
############################################
s3_bucket: "{{ r2_bucket_name }}"
s3_endpoint: "{{ r2_bucket_endpoint }}"
s3_access_key: "{{ lookup('env','R2_ACCESS_KEY') | mandatory }}"
s3_secret_key: "{{ lookup('env','R2_SECRET_KEY') | mandatory }}"
cloudflare_api_token_r2: >-
  {{ lookup('env', 'CLOUDFLARE_API_TOKEN_R2')
     | mandatory }}
############################################
# Cloudflare API (pour Traefik DNS-01)
############################################
cloudflare_dns_api_token: >-
  {{ lookup('env','CLOUDFLARE_API_TOKEN') | mandatory }}
############################################
# SSH / Connexion
############################################
ec2_user_ssh_keys: []
############################################
# Dérivés
############################################
wiki_media_base_url: >-
  https://{{ r2_bucket_name }}.{{ r2_account_id
  }}.r2.cloudflarestorage.com
traefik_dashboard_host: "traefik.{{ base_domain }}"
############################################
# Keycloak Admin Password
############################################
kc_admin: admin
kc_admin_password: "{{ lookup('env','KEYCLOAK_ADMIN_PASS') | mandatory }}"
kc_realm: "saas"
postgres_user: "keycloak_wiki"
postgres_password: "{{ lookup('env','KEYCLOAK_DB_PASSWORD') | mandatory }}"
postgres_db: "keycloak_db"
############################################
# postgres bdd rds
############################################
postgres_admin_user: "postgres"
postgres_admin_password: "{{ lookup('env','DB_PASSWORD') | mandatory }}"
postgres_admin_db: "postgres"
