---
- name: Créer le dossier n8n
  become: true
  file:
    path: /opt/n8n
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Créer le dossier data de n8n avec les bons droits
  become: true
  file:
    path: /opt/n8n/data
    state: directory
    owner: 1000   # utilisateur node dans le conteneur
    group: 1000
    mode: '0755'

- name: Copier le docker-compose.yml de n8n
  become: true
  copy:
    src: docker-compose.yml     # va chercher dans roles/n8n/files/
    dest: /opt/n8n/docker-compose.yml
    owner: root
    group: root
    mode: '0644'
  notify: Redémarrer n8n

- name: Démarrer n8n avec Docker Compose v2
  become: true
  community.docker.docker_compose_v2:
    project_src: /opt/n8n
    state: present
    
- name: Attendre que n8n démarre
  uri:
    url: "https://n8n.wikiplatform.app"
    validate_certs: no
  register: n8n_status
  until: n8n_status.status == 200
  retries: 30
  delay: 5

  ## Partie portail web
- name: Créer dossier /opt/portal
  file:
    path: /opt/portal
    state: directory
    mode: "0755"

- name: Créer dossier /opt/portal/public
  file:
    path: /opt/portal/public
    state: directory
    mode: "0755"

- name: Déployer les fichiers applicatifs (Dockerfile, package.json, server.js, public/)
  copy:
    src: "{{ item.src }}"
    dest: "/opt/portal/{{ item.dest }}"
    mode: "0644"
  with_items:
    - { src: "Dockerfile",            dest: "Dockerfile" }
    - { src: "package.json",          dest: "package.json" }
    - { src: "server.js",             dest: "server.js" }
    - { src: "public/index.html",     dest: "public/index.html" }
    - { src: "public/styles.css",     dest: "public/styles.css" }
    - { src: "views/dashboard.ejs",   dest: "views/dashboard.ejs" }
  
  # Charger et afficher les secrets Keycloak

- name: Charger les secrets Keycloak depuis le serveur distant
  slurp:
    src: /opt/keycloak/clients.json
  register: keycloak_clients_raw

- name: Convertir le JSON en dictionnaire
  set_fact:
    keycloak_clients: "{{ keycloak_clients_raw.content | b64decode | from_json }}"

- name: Définir le secret du client portal
  set_fact:
    keycloak_portal_secret: "{{ keycloak_clients.portal.secret }}"
- debug:
    msg: "Secret du client portal = {{ keycloak_portal_secret }}"

- name: Générer .env de l’app portail
  template:
    src: "env.j2"
    dest: "/opt/portal/.env"
    mode: "0640"

- name: Générer docker-compose.yml du portail
  template:
    src: "docker-compose.yml"
    dest: "/opt/portal/docker-compose.yml"
    mode: "0644"

- name: Démarrer le portail (docker compose)
  command: docker compose up -d
  args:
    chdir: /opt/portal

# --- Ajouter ici les imports automatiques ---
- name: Copier le workflow stripe-to-keycloak.json
  become: true
  copy:
    src: stripe-to-keycloak.json      # ← depuis roles/n8n/files/
    dest: /opt/n8n/data/stripe-to-keycloak.json
    owner: 1000
    group: 1000
    mode: '0644'

- name: Importer le workflow dans n8n
  become: true
  command: docker exec n8n n8n import:workflow --input=/home/node/.n8n/stripe-to-keycloak.json
  ignore_errors: true  

- name: Copier les credentials n8n
  become: true
  copy:
    src: credentials.json
    dest: /opt/n8n/data/credentials.json
    owner: 1000
    group: 1000
    mode: '0600'

- name: Importer les credentials dans n8n
  become: true
  command: docker exec n8n n8n import:credentials --input=/home/node/.n8n/credentials.json
  ignore_errors: true
