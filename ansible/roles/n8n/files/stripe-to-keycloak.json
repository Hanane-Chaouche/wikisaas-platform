{
  "name": "stripe-to-keycloak.json",
  "nodes": [
    {
      "parameters": {
        "events": [
          "checkout.session.completed",
          "customer.subscription.deleted",
          "customer.subscription.updated"
        ]
      },
      "id": "b81aa912-3aea-4f4c-be33-a1b5e05158c9",
      "name": "Stripe Trigger",
      "type": "n8n-nodes-base.stripeTrigger",
      "typeVersion": 1,
      "position": [
        -1200,
        288
      ],
      "webhookId": "60f4f349-1860-4ddc-aad2-52fe2168143a",
      "credentials": {
        "stripeApi": {
          "id": "neeXG42GaYK12nLy",
          "name": "Stripe account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const session = $json.data.object;\n\nconst email = session.customer_details?.email || session.customer_email || \"inconnu\";\nconst fullName = session.customer_details?.name || email.split(\"@\")[0];\nconst plan = session.metadata?.plan || \"starter\";\n\n//  DÃ©couper le nom complet\nlet firstName = \"\";\nlet lastName = \"\";\n\nif (fullName.includes(\" \")) {\n  const parts = fullName.trim().split(\" \");\n  firstName = parts[0];\n  lastName = parts.slice(1).join(\" \"); // gÃ¨re les noms composÃ©s\n} else {\n  firstName = fullName;\n  lastName = \"\";\n}\n\n// ðŸ§± GÃ©nÃ©rer un username unique Ã  partir de lâ€™email\nconst base = email.split(\"@\")[0].toLowerCase().replace(/[^a-z0-9]/g, \"\");\nconst unique = Date.now().toString().slice(-4);\nconst username = `${base}${unique}`;\n\nreturn [{\n  email,\n  username,\n  firstName,\n  lastName,\n  plan,\n  customer_id: session.customer,\n  subscription_id: session.subscription,\n  session_id: session.id,\n  amount: session.amount_total / 100,\n  currency: session.currency,\n  status: session.status,\n  payment_status: session.payment_status\n}];\n"
      },
      "id": "5b18d6ca-b9de-49bb-82b8-23b6b5fb2c8c",
      "name": "Extract Plan + Email",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -976,
        288
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "url": "https://sso.wikiplatform.app/admin/realms/master/users/{{$json[\"id\"]}}/groups/{{ $json.plan.toUpperCase() }}",
        "options": {}
      },
      "id": "d7cef0bf-f9f8-4341-9b4f-694a3a32ae0c",
      "name": "Keycloak: Assign Group",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        144,
        288
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.plan}}",
              "value2": "enterprise-plus"
            }
          ]
        }
      },
      "id": "74a3d5c5-4eca-44b0-860d-56077b3973ae",
      "name": "IF Enterprise+",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        368,
        288
      ]
    },
    {
      "parameters": {
        "url": "http://provisioner:3000/deploy-new-wiki",
        "jsonParameters": true,
        "options": {}
      },
      "id": "8dd78cfe-2254-4b8a-bddc-e10d8b0d7d78",
      "name": "Call Provisioner",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        528,
        -80
      ]
    },
    {
      "parameters": {
        "fromEmail": "=brad@wikiplatform.app",
        "toEmail": "=chamer6@hotmail.com",
        "ccEmail": "=",
        "subject": "Bienvenue sur WikiPlatform ðŸš€",
        "text": "Bonjour {{$json[\"first_name\"] || \"client\"}},\n\nMerci dâ€™avoir rejoint WikiPlatform ðŸŽ‰\nVotre espace est prÃªt : https://ia.wikiplatform.app\n\n-- Lâ€™Ã©quipe WikiPlatform\n",
        "options": {}
      },
      "id": "d709db85-ee5d-4194-8640-7e1e5e28ce19",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        816,
        288
      ],
      "credentials": {
        "smtp": {
          "id": "smtp_cred_1",
          "name": "smtp_mail_provider"
        }
      }
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://sso.wikiplatform.app/admin/realms/saas/users",
        "responseFormat": "=json",
        "jsonParameters": true,
        "options": {
          "bodyContentType": "raw"
        },
        "bodyParametersJson": "={\n  \"username\": \"{{$node['Extract Plan + Email'].json['username']}}\",\n  \"email\": \"{{$node['Extract Plan + Email'].json['email']}}\",\n  \"firstName\": \"{{$node['Extract Plan + Email'].json['firstName']}}\",\n  \"lastName\": \"{{$node['Extract Plan + Email'].json['lastName']}}\",\n  \"enabled\": true,\n  \"emailVerified\": true,\n  \"credentials\": [\n    {\n      \"type\": \"password\",\n      \"value\": \"{{Math.random().toString(36).slice(-8)}}\",\n      \"temporary\": false\n    }\n  ]\n}\n",
        "headerParametersJson": "={{\n{\n  \"Authorization\": \"Bearer \" + $node[\"(recuperation-token)\"].json[\"access_token\"].trim(),\n  \"Content-Type\": \"application/json\"\n}\n}}"
      },
      "id": "7f480287-3a07-4380-a988-9bbe2aed9271",
      "name": "Keycloak: Create User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -80,
        64
      ],
      "executeOnce": false,
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "=GET",
        "url": "=https://sso.wikiplatform.app/admin/realms/saas/users",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{$node[\"Extract Plan + Email\"].json[\"email\"]}}"
            },
            {
              "name": "=exact",
              "value": "=true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=Authorization",
              "value": "=Bearer {{$node[\"(recuperation-token)\"].json[\"access_token\"]}}"
            },
            {
              "name": "=Content-Type",
              "value": "=application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -528,
        288
      ],
      "id": "ddb2ecc1-48b5-4df1-b345-900eba87446b",
      "name": "HTTP Request_find_user",
      "retryOnFail": false,
      "executeOnce": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://sso.wikiplatform.app/realms/saas/protocol/openid-connect/token",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "grant_type",
              "value": "client_credentials"
            },
            {
              "name": "client_id",
              "value": "portal"
            },
            {
              "name": "client_secret",
              "value": "=jI9oQZTAQQQywYXIop3LglGuXr8daCuz"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -752,
        288
      ],
      "id": "b6c2d1fa-c4c5-466e-8bad-9eda5489da30",
      "name": "(recuperation-token)",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "12782be9-2f4f-4fa7-acd5-5a596ff51e8a",
              "leftValue": "={{ Object.keys($json).length }}",
              "rightValue": "={{ 0 }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -304,
        288
      ],
      "id": "9e708922-b11f-422f-b0a2-88882994b70c",
      "name": "If"
    },
    {
      "parameters": {
        "fromEmail": "=brad@wikiplatform.app",
        "toEmail": "=chamer6@hotmail.com",
        "subject": "=Bienvenue sur WikiPlatform ",
        "emailFormat": "=html",
        "html": "=<html>\n  <body style=\"font-family: Arial, sans-serif; background-color: #f9fafc; color: #333; padding: 30px;\">\n    <table align=\"center\" width=\"600\" style=\"background-color: #ffffff; border-radius: 10px; box-shadow: 0 2px 8px rgba(0,0,0,0.05); padding: 30px;\">\n      <tr>\n        <td align=\"center\" style=\"padding-bottom: 20px;\">\n          <img src=\"https://wikiplatform.app/logo.png\" alt=\"WikiPlatform\" width=\"140\" style=\"margin-bottom: 10px;\" />\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <h2 style=\"color: #1e90ff;\">Bienvenue sur WikiPlatform ðŸš€</h2>\n          <p>Bonjour <strong>{{$json[\"first_name\"] || \"cher membre\"}}</strong>,</p>\n\n          <p>Merci dâ€™avoir rejoint <strong>WikiPlatform</strong> ðŸŽ‰<br/>\n          Votre espace personnel est dÃ©sormais prÃªt :</p>\n\n          <p style=\"text-align: center; margin: 30px 0;\">\n            <a href=\"{{$json[\"site_url\"]}}\" \n               style=\"background-color: #1e90ff; color: white; text-decoration: none; padding: 12px 25px; border-radius: 6px; font-weight: bold;\">\n              ðŸ”— AccÃ©der Ã  mon Wiki\n            </a>\n          </p>\n\n          <p>Si vous avez besoin dâ€™aide, notre Ã©quipe reste Ã  votre disposition.</p>\n\n          <p style=\"margin-top: 40px;\">Cordialement,<br/>\n          <strong>Lâ€™Ã©quipe WikiPlatform</strong></p>\n        </td>\n      </tr>\n      <tr>\n        <td align=\"center\" style=\"font-size: 12px; color: #aaa; padding-top: 20px;\">\n          Â© {{new Date().getFullYear()}} WikiPlatform â€“ Tous droits rÃ©servÃ©s.\n        </td>\n      </tr>\n    </table>\n  </body>\n</html>\n",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        816,
        -32
      ],
      "id": "4051e7ea-5f80-4fa0-bd4a-1b463bdef6a9",
      "name": "Send email",
      "webhookId": "c1379f13-8698-4956-b739-50982b4a2d5f",
      "credentials": {
        "smtp": {
          "id": "smtp_cred_1",
          "name": "smtp_mail_provider"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Stripe Trigger": {
      "main": [
        [
          {
            "node": "Extract Plan + Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Plan + Email": {
      "main": [
        [
          {
            "node": "(recuperation-token)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keycloak: Assign Group": {
      "main": [
        [
          {
            "node": "IF Enterprise+",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Enterprise+": {
      "main": [
        [
          {
            "node": "Call Provisioner",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Provisioner": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keycloak: Create User": {
      "main": [
        [
          {
            "node": "Keycloak: Assign Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request_find_user": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(recuperation-token)": {
      "main": [
        [
          {
            "node": "HTTP Request_find_user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Keycloak: Create User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Keycloak: Assign Group",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d6a0135f-71fb-4475-98c1-33124aa148ce",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "625a7b508ddddc65f2d5a86ea86a8931fe67b4b1767e27c6c03aa1cdc193d6f5"
  },
  "id": "YAIEk7eIdFmJfjlS",
  "tags": []
}