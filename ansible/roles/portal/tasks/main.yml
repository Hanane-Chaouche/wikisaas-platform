---
- name: Créer dossier /opt/portal
  file:
    path: /opt/portal
    state: directory
    mode: "0755"

- name: Créer dossier /opt/portal/public
  file:
    path: /opt/portal/public
    state: directory
    mode: "0755"
- name: Créer dossier /opt/portal/views
  file:
    path: /opt/portal/views
    state: directory
    mode: "0755"  

- name: Déployer les fichiers applicatifs (Dockerfile, package.json, server.js, public/)
  copy:
    src: "{{ item.src }}"
    dest: "/opt/portal/{{ item.dest }}"
    mode: "0644"
  with_items:
    - { src: "Dockerfile",            dest: "Dockerfile" }
    - { src: "package.json",          dest: "package.json" }
    - { src: "server.js",             dest: "server.js" }
    - { src: "public/index.html",     dest: "public/index.html" }
    - { src: "public/success.html",    dest: "public/success.html" }
    - { src: "public/cancel.html",     dest: "public/cancel.html" }
    - { src: "public/styles.css",     dest: "public/styles.css" }
    - { src: "views/dashboard.ejs",   dest: "views/dashboard.ejs" }
  
 # Charger et afficher les secrets Keycloak
- name: Charger les secrets Keycloak depuis le serveur distant
  slurp:
    src: /opt/keycloak/clients.json
  register: keycloak_clients_raw

- name: Convertir le JSON en dictionnaire
  set_fact:
    keycloak_clients: "{{ keycloak_clients_raw.content | b64decode | from_json }}"

- name: Définir le secret du client portal
  set_fact:
    keycloak_portal_secret: "{{ keycloak_clients.portal }}"
- debug:
    msg: "Secret du client portal = {{ keycloak_portal_secret }}"

- name: Générer .env de l’app portail
  template:
    src: "env.j2"
    dest: "/opt/portal/.env"
    mode: "0640"

- name: Générer docker-compose.yml du portail
  template:
    src: "docker-compose.yml"
    dest: "/opt/portal/docker-compose.yml"
    mode: "0644"

- name: Démarrer le portail (docker compose)
  command: docker compose up -d
  args:
    chdir: /opt/portal
