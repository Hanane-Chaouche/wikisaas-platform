services:
  postgres:
    image: postgres:15
    container_name: keycloak-db
    restart: always
    environment:
      POSTGRES_DB: keycloak_wiki
      POSTGRES_USER: keycloak_db
      POSTGRES_PASSWORD: pass123
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - proxy

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak
    restart: always
    command: ["start", "--optimized", "--import-realm"]
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak_wiki
      KC_DB_USERNAME: keycloak_db
      KC_DB_PASSWORD: pass123
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: hanane
      KC_HOSTNAME: sso.wikiplatform.app
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_PROXY: edge
      JAVA_OPTS_APPEND: "-Dcom.sun.net.ssl.checkRevocation=false -Djdk.tls.client.protocols=TLSv1.3 -Djavax.net.ssl.trustStoreType=JKS"
    volumes:
      - ./keycloak-init.sh:/opt/keycloak/init/keycloak-init.sh
      - ./data:/opt/keycloak/data
    networks:
      - proxy
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`sso.wikiplatform.app`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.tls.certresolver=le"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

networks:
  proxy:
    external: true
