name: Terraform Cloud (Apply on main)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_CLOUD_ORGANIZATION: "wikisaas-org"
      TF_WORKSPACE: "wikisaas-platform"
      CONFIG_DIRECTORY: "./terraform"

    steps:
      # 1. R√©cup√©rer le code
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Uploader la configuration vers Terraform Cloud
      - name: Upload Config
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      # 3. Cr√©er un run Terraform (apply automatique)
      - name: Create Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: create-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: false

      # 4. Installer Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # 5. Init Terraform (backend = Terraform Cloud)
      - name: Init Terraform
        run: terraform -chdir=terraform init

      # 6. R√©cup√©rer les outputs bruts
      - name: Get Terraform Outputs
        run: terraform -chdir=terraform output -json

      # 7. Exporter les outputs dans les variables GitHub (string + objets)
      - name: Export Outputs
        run: |
          terraform -chdir=terraform output -json \
            | jq -r 'to_entries[] 
              | "echo \(.key)=" 
                + (if (.value.value | type) == "string" 
                     then (.value.value) 
                     else "'"'" + (.value.value | tostring) + "'"'" 
                   end) 
                + " >> $GITHUB_ENV"' \
            | bash

      # 8. Exemple d‚Äôutilisation (test affichage)
      - name: Test access to outputs
        run: |
          echo "EC2 Public IP = $EC2_PUBLIC_IP"
          echo "üóÑÔ∏è DB Endpoints (JSON) = $DB_ENDPOINTS"
