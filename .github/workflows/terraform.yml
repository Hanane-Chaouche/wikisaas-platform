name: Terraform Cloud (Apply on main)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_CLOUD_ORGANIZATION: "wikisaas-org"
      TF_WORKSPACE: "wikisaas-platform"
      CONFIG_DIRECTORY: "./terraform"

    steps:
      # 1. R√©cup√©rer le code du repo
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Uploader la configuration vers Terraform Cloud
      - name: Upload Config
        id: upload
        run: |
          echo "‚û°Ô∏è Upload de la configuration vers Terraform Cloud"
          resp=$(curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data "{\"data\":{\"type\":\"configuration-versions\",\"attributes\":{\"auto-queue-runs\":true},\"relationships\":{\"workspace\":{\"data\":{\"type\":\"workspaces\",\"id\":\"${TF_WORKSPACE}\"}}}}}" \
            https://app.terraform.io/api/v2/workspaces/${TF_WORKSPACE}/configuration-versions)

          upload_url=$(echo $resp | jq -r '.data.attributes."upload-url"')
          echo "Upload URL: $upload_url"

          # Cr√©e l‚Äôarchive de ton dossier terraform
          cd $CONFIG_DIRECTORY
          tar -czf ../config.tar.gz .
          cd -

          curl --request PUT --header "Content-Type: application/octet-stream" --data-binary @config.tar.gz $upload_url

      # 3. Cr√©er un run Terraform
      - name: Create Run
        id: create-run
        run: |
          echo "‚û°Ô∏è Cr√©ation d‚Äôun run Terraform"
          payload=$(cat <<EOF
          {
            "data": {
              "attributes": {
                "is-destroy": false,
                "message": "Run d√©clench√© par GitHub Actions"
              },
              "type": "runs",
              "relationships": {
                "workspace": {
                  "data": {
                    "type": "workspaces",
                    "id": "${TF_WORKSPACE}"
                  }
                }
              }
            }
          }
          EOF
          )

          response=$(curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data "$payload" \
            https://app.terraform.io/api/v2/runs)

          echo "$response"
          run_id=$(echo "$response" | jq -r '.data.id')
          echo "run_id=$run_id" >> $GITHUB_OUTPUT

      # 4. Afficher les outputs
      - name: Get Terraform Outputs
        run: |
          echo "üì¶ R√©cup√©ration des outputs Terraform..."
          curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            https://app.terraform.io/api/v2/organizations/${TF_CLOUD_ORGANIZATION}/workspaces/${TF_WORKSPACE}/current-state-version-outputs \
            | jq -r '.data[] | "\(.attributes.name) = \(.attributes.value)"'
