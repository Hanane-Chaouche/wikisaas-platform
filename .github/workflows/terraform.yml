name: Terraform Cloud   # Nom du workflow (visible dans GitHub Actions)

on:
  push:
    branches:
      - main            # Le workflow sâ€™exÃ©cute uniquement sur les pushes vers main
  workflow_dispatch:     # Permet aussi de lancer le workflow manuellement depuis GitHub

jobs:
  terraform:
    runs-on: ubuntu-latest   # GitHub lance une VM Ubuntu temporaire (runner)

    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}     # Ton token Terraform Cloud (secret GitHub)
      TF_CLOUD_ORGANIZATION: "wikisaas-org"         # Nom de ton organisation Terraform Cloud
      TF_WORKSPACE: "wikisaas-platform"             # Nom de ton workspace Terraform Cloud
      CONFIG_DIRECTORY: "./terraform"               # Dossier contenant tes fichiers .tf

    steps:
      # 1. RÃ©cupÃ©rer le code du repo
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Uploader la configuration Terraform vers Terraform Cloud
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      # 3. CrÃ©er un run Terraform (Plan + Apply automatique via Auto Apply du workspace)
      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: false   # ðŸ‘‰ dÃ©clenche un vrai Apply
