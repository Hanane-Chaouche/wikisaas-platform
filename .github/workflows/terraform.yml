name: Terraform CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_CLOUD_ORGANIZATION: "wikisaas-org"
      TF_WORKSPACE: "wikisaas-platform"
      CONFIG_DIRECTORY: "./terraform"

    steps:
      # 1. Récupérer le code du repo
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Uploader la configuration Terraform vers Terraform Cloud
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.4
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      # 3. Créer un run Terraform Cloud (plan + apply)
      - name: Create Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.4
        id: run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: false

      # 4. Récupérer les outputs depuis Terraform Cloud
      - name: Get Outputs
        uses: hashicorp/tfc-workflows-github/actions/get-outputs@v1.0.4
        id: outputs
        with:
          workspace: ${{ env.TF_WORKSPACE }}

      # 5. Afficher quelques outputs utiles dans les logs
      - name: Show Outputs
        run: |
          echo "=== Terraform Outputs ==="
          echo "EC2 Public IP      : ${{ steps.outputs.outputs_ec2_public_ip }}"
          echo "EC2 Public DNS     : ${{ steps.outputs.outputs_ec2_public_dns }}"
          echo "RDS Endpoints      : ${{ steps.outputs.outputs_db_endpoints }}"
          echo "Cloudflare DNS     : ${{ steps.outputs.outputs_dns_records }}"
          echo "Cloudflare R2 Name : ${{ steps.outputs.outputs_r2_bucket_name }}"
          echo "Cloudflare R2 URL  : ${{ steps.outputs.outputs_r2_bucket_endpoint }}"
