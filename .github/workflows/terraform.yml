name: Deploy Infra & Config

on:
  push:
    branches: [ main ]
    
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: github.event_name == 'workflow_dispatch' || contains(join(github.event.head_commit.message, ' '), 'terraform/')

    env:
      TF_CLOUD_ORGANIZATION: "wikisaas-org"
      TF_WORKSPACE: "wikisaas-platform"
      CONFIG_DIRECTORY: "./terraform"

      # Secrets GitHub
      ADMIN_PASS_CYBER: ${{ secrets.ADMIN_PASS_CYBER }}
      ADMIN_PASS_DEVOPS: ${{ secrets.ADMIN_PASS_DEVOPS }}
      ADMIN_PASS_IA: ${{ secrets.ADMIN_PASS_IA }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_API_TOKEN_R2: ${{ secrets.CLOUDFLARE_API_TOKEN_R2 }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      KEYCLOAK_ADMIN_PASS: ${{ secrets.KEYCLOAK_ADMIN_PASS }}
      R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
      R2_SECRET_KEY: ${{ secrets.R2_SECRET_KEY }}
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      KEYCLOAK_DB_PASSWORD: ${{ secrets.KEYCLOAK_DB_PASSWORD }}
      VM_SSH_KEY: ${{ secrets.VM_SSH_KEY }}

    steps:
      - uses: actions/checkout@v4
      # ... toutes tes Ã©tapes Terraform (upload, create-run, wait, outputs, etc.)

  ansible:
    runs-on: ubuntu-latest
    needs: terraform
   
    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          printf "%s" "$VM_SSH_KEY" > ~/.ssh/newtest.pem
          chmod 600 ~/.ssh/newtest.pem

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Install Ansible collections
        run: ansible-galaxy collection install ansible.posix

      - name: Add SSH known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H wikiplatform.app >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventories/prod/hosts.ini ansible/site.yml
